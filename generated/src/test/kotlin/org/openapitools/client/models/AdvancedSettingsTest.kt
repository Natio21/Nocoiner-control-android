/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.natio21.nocoiner_control.openapi.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.natio21.nocoiner_control.openapi.client.models.AdvancedSettings

class AdvancedSettingsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AdvancedSettings
        //val modelInstance = AdvancedSettings()

        // to test the property `asicBoost`
        should("test asicBoost") {
            // uncomment below to test the property
            //modelInstance.asicBoost shouldBe ("TODO")
        }

        // to test the property `autoChipThrottling` - Automatically adjusts chip frequencies based on temperatures
        should("test autoChipThrottling") {
            // uncomment below to test the property
            //modelInstance.autoChipThrottling shouldBe ("TODO")
        }

        // to test the property `bitmainDisableVoltComp` - Disable voltage compensation feature
        should("test bitmainDisableVoltComp") {
            // uncomment below to test the property
            //modelInstance.bitmainDisableVoltComp shouldBe ("TODO")
        }

        // to test the property `disableChainBreakProtection`
        should("test disableChainBreakProtection") {
            // uncomment below to test the property
            //modelInstance.disableChainBreakProtection shouldBe ("TODO")
        }

        // to test the property `disableIgnoreBrokenChains`
        should("test disableIgnoreBrokenChains") {
            // uncomment below to test the property
            //modelInstance.disableIgnoreBrokenChains shouldBe ("TODO")
        }

        // to test the property `disableRestartUnbalanced`
        should("test disableRestartUnbalanced") {
            // uncomment below to test the property
            //modelInstance.disableRestartUnbalanced shouldBe ("TODO")
        }

        // to test the property `disableVoltChecks`
        should("test disableVoltChecks") {
            // uncomment below to test the property
            //modelInstance.disableVoltChecks shouldBe ("TODO")
        }

        // to test the property `downscalePresetOnFailure` - Automatic preset reduction in case of miner overheating or chain break error
        should("test downscalePresetOnFailure") {
            // uncomment below to test the property
            //modelInstance.downscalePresetOnFailure shouldBe ("TODO")
        }

        // to test the property `higherVoltOffset` - Higher voltage offset during initialization stage
        should("test higherVoltOffset") {
            // uncomment below to test the property
            //modelInstance.higherVoltOffset shouldBe ("TODO")
        }

        // to test the property `ignoreBrokenSensors`
        should("test ignoreBrokenSensors") {
            // uncomment below to test the property
            //modelInstance.ignoreBrokenSensors shouldBe ("TODO")
        }

        // to test the property `maxRestartAttempts`
        should("test maxRestartAttempts") {
            // uncomment below to test the property
            //modelInstance.maxRestartAttempts shouldBe ("TODO")
        }

        // to test the property `quickStart`
        should("test quickStart") {
            // uncomment below to test the property
            //modelInstance.quickStart shouldBe ("TODO")
        }

        // to test the property `quietMode`
        should("test quietMode") {
            // uncomment below to test the property
            //modelInstance.quietMode shouldBe ("TODO")
        }

        // to test the property `remainStoppedOnReboot`
        should("test remainStoppedOnReboot") {
            // uncomment below to test the property
            //modelInstance.remainStoppedOnReboot shouldBe ("TODO")
        }

        // to test the property `restartHashrate` - Percent, `0` to disable
        should("test restartHashrate") {
            // uncomment below to test the property
            //modelInstance.restartHashrate shouldBe ("TODO")
        }

        // to test the property `restartTemp`
        should("test restartTemp") {
            // uncomment below to test the property
            //modelInstance.restartTemp shouldBe ("TODO")
        }

        // to test the property `tunerBadChipHrThreshold` - Autotuning: hashrate threshold below which the chips are marked as bad ones
        should("test tunerBadChipHrThreshold") {
            // uncomment below to test the property
            //modelInstance.tunerBadChipHrThreshold shouldBe ("TODO")
        }

    }
}
