/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.natio21.nocoiner_control.openapi.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.natio21.nocoiner_control.openapi.client.models.StatusPane
import com.natio21.nocoiner_control.openapi.client.models.MinerState
import com.natio21.nocoiner_control.openapi.client.models.Warranty

class StatusPaneTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of StatusPane
        //val modelInstance = StatusPane()

        // to test the property `minerState`
        should("test minerState") {
            // uncomment below to test the property
            //modelInstance.minerState shouldBe ("TODO")
        }

        // to test the property `minerStateTime` - Time spent in the current state. For now implemented for `mining` state only.
        should("test minerStateTime") {
            // uncomment below to test the property
            //modelInstance.minerStateTime shouldBe ("TODO")
        }

        // to test the property `rebootRequired` - Miner restart required to apply
        should("test rebootRequired") {
            // uncomment below to test the property
            //modelInstance.rebootRequired shouldBe ("TODO")
        }

        // to test the property `restartRequired` - Miner restart required to apply config
        should("test restartRequired") {
            // uncomment below to test the property
            //modelInstance.restartRequired shouldBe ("TODO")
        }

        // to test the property `findMiner` - Flag to switch find_miner function on target devices. Optional, default `false`
        should("test findMiner") {
            // uncomment below to test the property
            //modelInstance.findMiner shouldBe ("TODO")
        }

        // to test the property `unlocked` - Show screen-lock status (checks that  any of auth methods satisfies)
        should("test unlocked") {
            // uncomment below to test the property
            //modelInstance.unlocked shouldBe ("TODO")
        }

        // to test the property `description` - Optional. Description if status is failure
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `warranty`
        should("test warranty") {
            // uncomment below to test the property
            //modelInstance.warranty shouldBe ("TODO")
        }

    }
}
